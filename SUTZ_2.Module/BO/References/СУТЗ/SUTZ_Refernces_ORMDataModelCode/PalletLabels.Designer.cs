//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace SUTZ_2.Module.BO.References {

	[Persistent(@"Table_028")]
		[System.ComponentModel.DefaultProperty("Barcode")]
	public partial class PalletLabels : XPBaseObject {
		int fidd;
		[Key(true)]
		[Persistent(@"f001")]
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		public int idd {
			get { return fidd; }
			set { SetPropertyValue<int>("idd", ref fidd, value); }
		}
		string fBarcode;
		[Indexed(Name=@"IndexBarcode")]
		[Size(27)]
		[Persistent(@"f002")]
		[DisplayName(@"Штрихкод")]
		public string Barcode {
			get { return fBarcode; }
			set { SetPropertyValue<string>("Barcode", ref fBarcode, value); }
		}
		SUTZ_2.Module.BO.enPalletLabelStatus fPalletLabelStatus;
		[Persistent(@"f003")]
		[DisplayName(@"Статус этикетки")]
		public SUTZ_2.Module.BO.enPalletLabelStatus PalletLabelStatus {
			get { return fPalletLabelStatus; }
			set { SetPropertyValue<SUTZ_2.Module.BO.enPalletLabelStatus>("PalletLabelStatus", ref fPalletLabelStatus, value); }
		}
		Goods fGood;
		[Persistent(@"f004")]
		[DisplayName(@"Товар")]
		public Goods Good {
			get { return fGood; }
			set { SetPropertyValue<Goods>("Good", ref fGood, value); }
		}
		Delimeters fDelimeter;
		[Persistent(@"f005")]
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		[DisplayName(@"Разделитель")]
		public Delimeters Delimeter {
			get { return fDelimeter; }
			set { SetPropertyValue<Delimeters>("Delimeter", ref fDelimeter, value); }
		}
		DateTime? fProductionDate;
		[Persistent(@"f006")]
		[DisplayName(@"Дата производства")]
		public DateTime? ProductionDate {
			get { return fProductionDate; }
			set { SetPropertyValue<DateTime?>("ProductionDate", ref fProductionDate, value); }
		}
		DateTime? fExpirationDate;
		[Persistent(@"f007")]
		[DisplayName(@"Срок годности")]
		public DateTime? ExpirationDate {
			get { return fExpirationDate; }
			set { SetPropertyValue<DateTime?>("ExpirationDate", ref fExpirationDate, value); }
		}
		decimal fTotalQuantity;
		[Persistent(@"f008")]
		[DisplayName(@"Количество")]
		public decimal TotalQuantity {
			get { return fTotalQuantity; }
			set { SetPropertyValue<decimal>("TotalQuantity", ref fTotalQuantity, value); }
		}
		string fBarcodeEAN13;
		[Size(13)]
		[Persistent(@"f009")]
		[DisplayName(@"Штрихкод EAN13")]
		public string BarcodeEAN13 {
			get { return fBarcodeEAN13; }
			set { SetPropertyValue<string>("BarcodeEAN13", ref fBarcodeEAN13, value); }
		}
		string fBarcode2;
		[Size(64)]
		[Persistent(@"f010")]
		[DisplayName(@"Штрих-код 2")]
		public string Barcode2 {
			get { return fBarcode2; }
			set { SetPropertyValue<string>("Barcode2", ref fBarcode2, value); }
		}
		string fComment;
		[Persistent(@"f011")]
		[DisplayName(@"Комментарий")]
		public string Comment {
			get { return fComment; }
			set { SetPropertyValue<string>("Comment", ref fComment, value); }
		}
		Guid fidGUID;
		[Persistent(@"f012")]
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		[DisplayName(@"id guid")]
		public Guid idGUID {
			get { return fidGUID; }
			set { SetPropertyValue<Guid>("idGUID", ref fidGUID, value); }
		}
		DevExpress.Xpo.Session flokSession;
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		[MemberDesignTimeVisibility(false)]
		[NonPersistent]
		public DevExpress.Xpo.Session lokSession {
			get { return flokSession; }
			set { SetPropertyValue<DevExpress.Xpo.Session>("lokSession", ref flokSession, value); }
		}
		bool fIsMarkDeleted;
		[Persistent(@"f013")]
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		[DisplayName(@"Пометка удаления")]
		public bool IsMarkDeleted {
			get { return fIsMarkDeleted; }
			set { SetPropertyValue<bool>("IsMarkDeleted", ref fIsMarkDeleted, value); }
		}
		string fPalletCode;
		/// <summary>
		/// В этом поле сохраняется последний код размещения склада, куда был размещен данный паллет
		/// </summary>
		[Size(20)]
		[Persistent(@"f014")]
		[DisplayName(@"код паллета")]
		public string PalletCode {
			get { return fPalletCode; }
			set { SetPropertyValue<string>("PalletCode", ref fPalletCode, value); }
		}
		string fPartNumber;
		/// <summary>
		/// Серийный номер партии товара, соответствует справочнику ХаракеристикиНоменклатуры
		/// </summary>
		[Size(50)]
		[Persistent(@"f015")]
		[DisplayName(@"Номер партии")]
		public string PartNumber {
			get { return fPartNumber; }
			set { SetPropertyValue<string>("PartNumber", ref fPartNumber, value); }
		}
	}

}
