//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace SUTZ_2.Module.BO.Exchange.SUTZ1C_SUTZNET {

	public partial class SUTZ_NET_StockRooms : XPLiteObject {
		int frow_id;
		[Key(true)]
		public int row_id {
			get { return frow_id; }
			set { SetPropertyValue<int>("row_id", ref frow_id, value); }
		}
		Guid fiddSUTZ_guid;
		public Guid iddSUTZ_guid {
			get { return fiddSUTZ_guid; }
			set { SetPropertyValue<Guid>("iddSUTZ_guid", ref fiddSUTZ_guid, value); }
		}
		int fiddSUTZ_int;
		public int iddSUTZ_int {
			get { return fiddSUTZ_int; }
			set { SetPropertyValue<int>("iddSUTZ_int", ref fiddSUTZ_int, value); }
		}
		Guid fDelimeter;
		public Guid Delimeter {
			get { return fDelimeter; }
			set { SetPropertyValue<Guid>("Delimeter", ref fDelimeter, value); }
		}
		string fCode;
		[Size(16)]
		public string Code {
			get { return fCode; }
			set { SetPropertyValue<string>("Code", ref fCode, value); }
		}
		string fDescription;
		public string Description {
			get { return fDescription; }
			set { SetPropertyValue<string>("Description", ref fDescription, value); }
		}
		bool fIsFolder;
		public bool IsFolder {
			get { return fIsFolder; }
			set { SetPropertyValue<bool>("IsFolder", ref fIsFolder, value); }
		}
		Guid fParentID;
		public Guid ParentID {
			get { return fParentID; }
			set { SetPropertyValue<Guid>("ParentID", ref fParentID, value); }
		}
		byte fTypeOfStockRoom;
		public byte TypeOfStockRoom {
			get { return fTypeOfStockRoom; }
			set { SetPropertyValue<byte>("TypeOfStockRoom", ref fTypeOfStockRoom, value); }
		}
		bool fisGroup;
		public bool isGroup {
			get { return fisGroup; }
			set { SetPropertyValue<bool>("isGroup", ref fisGroup, value); }
		}
		byte fTypeOfCells;
		public byte TypeOfCells {
			get { return fTypeOfCells; }
			set { SetPropertyValue<byte>("TypeOfCells", ref fTypeOfCells, value); }
		}
		string flogisticParameter;
		[Size(50)]
		public string logisticParameter {
			get { return flogisticParameter; }
			set { SetPropertyValue<string>("logisticParameter", ref flogisticParameter, value); }
		}
		bool fremoveFromMix;
		public bool removeFromMix {
			get { return fremoveFromMix; }
			set { SetPropertyValue<bool>("removeFromMix", ref fremoveFromMix, value); }
		}
		Guid fwarehouse;
		public Guid warehouse {
			get { return fwarehouse; }
			set { SetPropertyValue<Guid>("warehouse", ref fwarehouse, value); }
		}
		DateTime fdTimeWrite;
		public DateTime dTimeWrite {
			get { return fdTimeWrite; }
			set { SetPropertyValue<DateTime>("dTimeWrite", ref fdTimeWrite, value); }
		}
		SUTZ_NET_HostsUsers fUserHostWriter;
		public SUTZ_NET_HostsUsers UserHostWriter {
			get { return fUserHostWriter; }
			set { SetPropertyValue<SUTZ_NET_HostsUsers>("UserHostWriter", ref fUserHostWriter, value); }
		}
		byte fis_read;
		[Indexed(Name=@"Index_IsRead")]
		public byte is_read {
			get { return fis_read; }
			set { SetPropertyValue<byte>("is_read", ref fis_read, value); }
		}
		DateTime? fdTimeRead;
		public DateTime? dTimeRead {
			get { return fdTimeRead; }
			set { SetPropertyValue<DateTime?>("dTimeRead", ref fdTimeRead, value); }
		}
		SUTZ_NET_HostsUsers fUserHostReader;
		public SUTZ_NET_HostsUsers UserHostReader {
			get { return fUserHostReader; }
			set { SetPropertyValue<SUTZ_NET_HostsUsers>("UserHostReader", ref fUserHostReader, value); }
		}
		bool fisMarkForDeleted;
		[DisplayName(@"Пометка удаления")]
		public bool isMarkForDeleted {
			get { return fisMarkForDeleted; }
			set { SetPropertyValue<bool>("isMarkForDeleted", ref fisMarkForDeleted, value); }
		}
	}

}
