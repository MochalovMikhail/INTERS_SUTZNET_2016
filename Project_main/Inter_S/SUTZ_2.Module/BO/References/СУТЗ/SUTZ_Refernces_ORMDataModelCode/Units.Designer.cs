//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace SUTZ_2.Module.BO.References {

	[Persistent(@"Table_021")]
		[System.ComponentModel.DefaultProperty("Description")]
	public partial class Units : XPBaseObject {
		int fidd;
		[Key(true)]
		[Persistent(@"f001")]
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		public int idd {
			get { return fidd; }
			set { SetPropertyValue<int>("idd", ref fidd, value); }
		}
		Goods fParentId;
		[Persistent(@"f002")]
		[DisplayName(@"Товар")]
		[Association(@"UnitsReferencesGoods")]
		public Goods ParentId {
			get { return fParentId; }
			set { SetPropertyValue<Goods>("ParentId", ref fParentId, value); }
		}
		OKEI fOKEI;
		[Persistent(@"f003")]
		[DisplayName(@"ОКЕИ")]
		public OKEI OKEI {
			get { return fOKEI; }
			set { SetPropertyValue<OKEI>("OKEI", ref fOKEI, value); }
		}
		decimal fKoeff;
		[Persistent(@"f004")]
		[DisplayName(@"Коэффициент")]
		public decimal Koeff {
			get { return fKoeff; }
			set { SetPropertyValue<decimal>("Koeff", ref fKoeff, value); }
		}
		bool fIsMultiCase;
		[Persistent(@"f005")]
		[DisplayName(@"Это мультиупаковка")]
		public bool IsMultiCase {
			get { return fIsMultiCase; }
			set { SetPropertyValue<bool>("IsMultiCase", ref fIsMultiCase, value); }
		}
		Units fMultiCaseUnit;
		[Persistent(@"f006")]
		[DisplayName(@"Мультиупаковка")]
		public Units MultiCaseUnit {
			get { return fMultiCaseUnit; }
			set { SetPropertyValue<Units>("MultiCaseUnit", ref fMultiCaseUnit, value); }
		}
		float fHeight;
		[Persistent(@"f007")]
		[DisplayName(@"Высота")]
		public float Height {
			get { return fHeight; }
			set { SetPropertyValue<float>("Height", ref fHeight, value); }
		}
		float fWidth;
		[Persistent(@"f008")]
		[DisplayName(@"Ширина")]
		public float Width {
			get { return fWidth; }
			set { SetPropertyValue<float>("Width", ref fWidth, value); }
		}
		float fDepth;
		[Persistent(@"f009")]
		[DisplayName(@"Глубина")]
		public float Depth {
			get { return fDepth; }
			set { SetPropertyValue<float>("Depth", ref fDepth, value); }
		}
		Delimeters fDelimeter;
		[Persistent(@"f010")]
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		[DisplayName(@"Разделитель")]
		public Delimeters Delimeter {
			get { return fDelimeter; }
			set { SetPropertyValue<Delimeters>("Delimeter", ref fDelimeter, value); }
		}
		Guid fidGUID;
		[Persistent(@"f011")]
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		[DisplayName(@"idd sutz")]
		public Guid idGUID {
			get { return fidGUID; }
			set { SetPropertyValue<Guid>("idGUID", ref fidGUID, value); }
		}
		string fDescription;
		[Size(20)]
		[Persistent(@"f012")]
		[DisplayName(@"Наименование")]
		public string Description {
			get { return fDescription; }
			set { SetPropertyValue<string>("Description", ref fDescription, value); }
		}
		float fWeight;
		[Persistent(@"f013")]
		[DisplayName(@"Вес")]
		public float Weight {
			get { return fWeight; }
			set { SetPropertyValue<float>("Weight", ref fWeight, value); }
		}
		string fBarcode;
		[Size(50)]
		[Persistent(@"f014")]
		[DisplayName(@"Штрихкод")]
		public string Barcode {
			get { return fBarcode; }
			set { SetPropertyValue<string>("Barcode", ref fBarcode, value); }
		}
		DevExpress.Xpo.Session flokSession;
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		[MemberDesignTimeVisibility(false)]
		[NonPersistent]
		public DevExpress.Xpo.Session lokSession {
			get { return flokSession; }
			set { SetPropertyValue<DevExpress.Xpo.Session>("lokSession", ref flokSession, value); }
		}
		bool fIsMarkDeleted;
		[Persistent(@"f015")]
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		[DisplayName(@"Пометка удаления")]
		public bool IsMarkDeleted {
			get { return fIsMarkDeleted; }
			set { SetPropertyValue<bool>("IsMarkDeleted", ref fIsMarkDeleted, value); }
		}
	}

}
