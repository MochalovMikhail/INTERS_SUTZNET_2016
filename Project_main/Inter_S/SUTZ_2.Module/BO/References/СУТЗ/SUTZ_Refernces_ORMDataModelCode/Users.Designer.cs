//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
namespace SUTZ_2.Module.BO.References {

	[Persistent(@"Table_017")]
		[System.ComponentModel.DefaultProperty("UserName")]
	public partial class Users : XPBaseObject {
		int fidd;
		[Key(true)]
		[Persistent(@"f001")]
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		public int idd {
			get { return fidd; }
			set { SetPropertyValue<int>("idd", ref fidd, value); }
		}
		string fUserName;
		[Persistent(@"f002")]
		[DevExpress.Persistent.Validation.RuleRequiredField("Users_UserNameRequired", DevExpress.Persistent.Validation.DefaultContexts.Save), DevExpress.Persistent.Validation.RuleUniqueValue("Users_UserNameIsUnique", DevExpress.Persistent.Validation.DefaultContexts.Save, "Пользователь с таким именем уже зарегистрирован в системе!")]
		[DisplayName(@"Логин пользователя")]
		public string UserName {
			get { return fUserName; }
			set { SetPropertyValue<string>("UserName", ref fUserName, value); }
		}
		string fFullUserName;
		[Persistent(@"f003")]
		[DisplayName(@"Полное имя пользователя")]
		public string FullUserName {
			get { return fFullUserName; }
			set { SetPropertyValue<string>("FullUserName", ref fFullUserName, value); }
		}
		string fFIOBage;
		[Persistent(@"f004")]
		[DisplayName(@"ФИО для бейджа")]
		public string FIOBage {
			get { return fFIOBage; }
			set { SetPropertyValue<string>("FIOBage", ref fFIOBage, value); }
		}
		bool fIsActive;
		[Persistent(@"f005")]
		[DisplayName(@"Включен")]
		public bool IsActive {
			get { return fIsActive; }
			set { SetPropertyValue<bool>("IsActive", ref fIsActive, value); }
		}
		bool fChangePasswordOnFirstLogon;
		[Persistent(@"f006")]
		[DisplayName(@"Сменить пароль при первом входе")]
		public bool ChangePasswordOnFirstLogon {
			get { return fChangePasswordOnFirstLogon; }
			set { SetPropertyValue<bool>("ChangePasswordOnFirstLogon", ref fChangePasswordOnFirstLogon, value); }
		}
		string fStoredPassword;
		[Size(SizeAttribute.Unlimited)]
		[Persistent(@"f007")]
		[System.ComponentModel.Browsable(false), DevExpress.ExpressApp.Security.SecurityBrowsable]
		[DisplayName(@"Пароль")]
		public string StoredPassword {
			get { return fStoredPassword; }
			set { SetPropertyValue<string>("StoredPassword", ref fStoredPassword, value); }
		}
		Delimeters fDelimeter;
		[Persistent(@"f008")]
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		[DisplayName(@"Разделитель")]
		public Delimeters Delimeter {
			get { return fDelimeter; }
			set { SetPropertyValue<Delimeters>("Delimeter", ref fDelimeter, value); }
		}
		Delimeters fDefaultDelimeter;
		[Persistent(@"f009")]
		[DisplayName(@"Разделитель по умолчанию")]
		public Delimeters DefaultDelimeter {
			get { return fDefaultDelimeter; }
			set { SetPropertyValue<Delimeters>("DefaultDelimeter", ref fDefaultDelimeter, value); }
		}
		SUTZ_2.Module.BO.enMonitorResolution fMonitorResolution;
		[Persistent(@"f010")]
		[DisplayName(@"Тип монитора")]
		public SUTZ_2.Module.BO.enMonitorResolution MonitorResolution {
			get { return fMonitorResolution; }
			set { SetPropertyValue<SUTZ_2.Module.BO.enMonitorResolution>("MonitorResolution", ref fMonitorResolution, value); }
		}
		Guid fidGUID;
		[Persistent(@"f011")]
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		[DisplayName(@"id guid")]
		public Guid idGUID {
			get { return fidGUID; }
			set { SetPropertyValue<Guid>("idGUID", ref fidGUID, value); }
		}
		bool fIsMarkDeleted;
		[Persistent(@"f012")]
		[DevExpress.Persistent.Base.VisibleInListView(false), DevExpress.Persistent.Base.VisibleInDetailView(false), DevExpress.Persistent.Base.VisibleInLookupListView(false)]
		[DisplayName(@"Пометка удаления")]
		public bool IsMarkDeleted {
			get { return fIsMarkDeleted; }
			set { SetPropertyValue<bool>("IsMarkDeleted", ref fIsMarkDeleted, value); }
		}
		[Association(@"UserSettingsReferencesUsers", typeof(UserSettings)), Aggregated]
		public XPCollection<UserSettings> UserSettingsCollection { get { return GetCollection<UserSettings>("UserSettingsCollection"); } }
	}

}
